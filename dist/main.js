var w=Object.create;var E=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var O=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var h=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var A=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of I(t))!k.call(e,o)&&o!==n&&E(e,o,{get:()=>t[o],enumerable:!(s=T(t,o))||s.enumerable});return e};var j=(e,t,n)=>(n=e!=null?w(O(e)):{},A(t||!e||!e.__esModule?E(n,"default",{value:e,enumerable:!0}):n,e));var y=h((z,$)=>{$.exports={name:"dotenv",version:"16.4.1",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://github.com/motdotla/dotenv?sponsor=1",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var N=h((X,l)=>{var f=require("fs"),v=require("path"),x=require("os"),K=require("crypto"),Y=y(),g=Y.version,L=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function R(e){let t={},n=e.toString();n=n.replace(/\r\n?/mg,`
`);let s;for(;(s=L.exec(n))!=null;){let o=s[1],r=s[2]||"";r=r.trim();let a=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),a==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),t[o]=r}return t}function S(e){let t=D(e),n=c.configDotenv({path:t});if(!n.parsed){let a=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw a.code="MISSING_DATA",a}let s=_(e).split(","),o=s.length,r;for(let a=0;a<o;a++)try{let i=s[a].trim(),u=P(n,i);r=c.decrypt(u.ciphertext,u.key);break}catch(i){if(a+1>=o)throw i}return c.parse(r)}function U(e){console.log(`[dotenv@${g}][INFO] ${e}`)}function F(e){console.log(`[dotenv@${g}][WARN] ${e}`)}function p(e){console.log(`[dotenv@${g}][DEBUG] ${e}`)}function _(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function P(e,t){let n;try{n=new URL(t)}catch(i){if(i.code==="ERR_INVALID_URL"){let u=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development");throw u.code="INVALID_DOTENV_KEY",u}throw i}let s=n.password;if(!s){let i=new Error("INVALID_DOTENV_KEY: Missing key part");throw i.code="INVALID_DOTENV_KEY",i}let o=n.searchParams.get("environment");if(!o){let i=new Error("INVALID_DOTENV_KEY: Missing environment part");throw i.code="INVALID_DOTENV_KEY",i}let r=`DOTENV_VAULT_${o.toUpperCase()}`,a=e.parsed[r];if(!a){let i=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw i.code="NOT_FOUND_DOTENV_ENVIRONMENT",i}return{ciphertext:a,key:s}}function D(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let n of e.path)f.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=v.resolve(process.cwd(),".env.vault");return f.existsSync(t)?t:null}function B(e){return e[0]==="~"?v.join(x.homedir(),e.slice(1)):e}function M(e){U("Loading env from encrypted .env.vault");let t=c._parseVault(e),n=process.env;return e&&e.processEnv!=null&&(n=e.processEnv),c.populate(n,t,e),{parsed:t}}function C(e){let t=v.resolve(process.cwd(),".env"),n="utf8",s=!!(e&&e.debug);if(e){if(e.path!=null){let o=e.path;if(Array.isArray(o)){for(let r of e.path)if(f.existsSync(r)){o=r;break}}t=B(o)}e.encoding!=null?n=e.encoding:s&&p("No encoding is specified. UTF-8 is used by default")}try{let o=c.parse(f.readFileSync(t,{encoding:n})),r=process.env;return e&&e.processEnv!=null&&(r=e.processEnv),c.populate(r,o,e),{parsed:o}}catch(o){return s&&p(`Failed to load ${t} ${o.message}`),{error:o}}}function q(e){if(_(e).length===0)return c.configDotenv(e);let t=D(e);return t?c._configVault(e):(F(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),c.configDotenv(e))}function W(e,t){let n=Buffer.from(t.slice(-64),"hex"),s=Buffer.from(e,"base64"),o=s.subarray(0,12),r=s.subarray(-16);s=s.subarray(12,-16);try{let a=K.createDecipheriv("aes-256-gcm",n,o);return a.setAuthTag(r),`${a.update(s)}${a.final()}`}catch(a){let i=a instanceof RangeError,u=a.message==="Invalid key length",V=a.message==="Unsupported state or unable to authenticate data";if(i||u){let d=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw d.code="INVALID_DOTENV_KEY",d}else if(V){let d=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw d.code="DECRYPTION_FAILED",d}else throw a}}function G(e,t,n={}){let s=!!(n&&n.debug),o=!!(n&&n.override);if(typeof t!="object"){let r=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw r.code="OBJECT_REQUIRED",r}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(o===!0&&(e[r]=t[r]),s&&p(o===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}var c={configDotenv:C,_configVault:M,_parseVault:S,config:q,decrypt:W,parse:R,populate:G};l.exports.configDotenv=c.configDotenv;l.exports._configVault=c._configVault;l.exports._parseVault=c._parseVault;l.exports.config=c.config;l.exports.decrypt=c.decrypt;l.exports.parse=c.parse;l.exports.populate=c.populate;l.exports=c});var m=(e,t)=>e+t;var b=j(N());(0,b.config)();async function J(){try{let e=process.env.STAGE;console.log(m(1,2))}catch(e){console.error(e)}}J().catch(e=>console.error(e));
